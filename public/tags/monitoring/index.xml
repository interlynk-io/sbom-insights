<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Monitoring on SBOM Insights</title>
    <link>https://sbom-insights.netlify.app/tags/monitoring/</link>
    <description>Recent content in Monitoring on SBOM Insights</description>
    <image>
      <title>SBOM Insights</title>
      <url>https://sbom-insights.netlify.app/logo.png</url>
      <link>https://sbom-insights.netlify.app/logo.png</link>
    </image>
    <generator>Hugo -- 0.150.0</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Sep 2025 16:39:52 +0530</lastBuildDate>
    <atom:link href="https://sbom-insights.netlify.app/tags/monitoring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Monitoring External Github Repos for Sboms</title>
      <link>https://sbom-insights.netlify.app/posts/monitoring-external-github-repos-for-sboms/</link>
      <pubDate>Tue, 23 Sep 2025 16:39:52 +0530</pubDate>
      <guid>https://sbom-insights.netlify.app/posts/monitoring-external-github-repos-for-sboms/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;alt text&#34; loading=&#34;lazy&#34; src=&#34;https://sbom-insights.netlify.app/posts/image-14.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GitHub Release Monitoring: SBOM Automation for External Repos&lt;/strong&gt; üöÄ&lt;/p&gt;
&lt;p&gt;If you‚Äôve been following our sbommv blog series, welcome to the fourth one‚Äîeach post tackling a new challenge around SBOM automation. Here‚Äôs a quick recap of what we‚Äôve covered so far:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;GitHub Release Transfers&lt;/strong&gt;: How to fetch SBOMs from GitHub release pages and move them to systems like folders, Dependency-Track, Interlynk, or AWS S3.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Folder Monitoring&lt;/strong&gt;: Running sbommv in daemon mode to continuously watch a local folder and upload new SBOMs as they appear.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AWS S3 Integration&lt;/strong&gt;: Adding S3 as both an input and output adapter, enabling SBOM flows to and from S3 buckets.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In short, sbommv is a tool built for automation‚Äîdesigned to seamlessly move SBOMs across systems, with support for format conversion, metadata enrichment, and monitoring workflows like folders.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Folder Monitoring: Sbom Automation That Never Sleeps</title>
      <link>https://sbom-insights.netlify.app/posts/folder-monitoring-sbom-automation-that-never-sleeps/</link>
      <pubDate>Tue, 23 Sep 2025 14:40:15 +0530</pubDate>
      <guid>https://sbom-insights.netlify.app/posts/folder-monitoring-sbom-automation-that-never-sleeps/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;alt text&#34; loading=&#34;lazy&#34; src=&#34;https://sbom-insights.netlify.app/posts/image-7.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In our previous post(GitHub Releases are where SBOM&amp;rsquo;s goto die), we tackled a growing pain in modern software security: SBOMs stuck in GitHub Releases. We showed how sbommv streamlines the manual mess‚Äîautomating the movement of SBOMs from GitHub or local folders directly into SBOM platforms like Dependency-Track, Interlynk(next blog will show demo on this).&lt;/p&gt;
&lt;p&gt;We covered:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;üîÑ Pulling SBOMs straight from GitHub via API or releases&lt;/li&gt;
&lt;li&gt;üß≥ Uploading pre-existing SBOMs from local folders&lt;/li&gt;
&lt;li&gt;üîç Using dry-run mode to validate before uploading&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And transferring those fetched SBOMs to dependency-track platform smoothly and seamlessly. That was the start. But it still required you to trigger the command each time, especially when input adapter or input system(source of SBOMs) is folder.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
